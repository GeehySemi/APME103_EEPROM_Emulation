<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\FMC_Program.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\FMC_Program.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon Aug 15 15:45:03 2022
<BR><P>
<H3>Maximum Stack Usage =        124 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; flash_ee_init &rArr; flash_ee_valid_transfer &rArr; flash_ee_copy_to_new_page &rArr; flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForLastOperation
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[60]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1f]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1f]">ADC1_2_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[3c]">ADC3_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from apm32e10x_it.o(i.BusFault_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[22]">CAN1_RX1_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[23]">CAN1_SCE_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[4b]">CAN2_RX1_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[4c]">CAN2_SCE_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[18]">DMA1_Channel1_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[19]">DMA1_Channel2_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel3_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel4_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[1c]">DMA1_Channel5_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel6_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[1e]">DMA1_Channel7_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[45]">DMA2_Channel1_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[46]">DMA2_Channel2_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[47]">DMA2_Channel3_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[48]">DMA2_Channel4_5_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from apm32e10x_it.o(i.DebugMon_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[13]">EINT0_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[35]">EINT15_10_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[14]">EINT1_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[15]">EINT2_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[16]">EINT3_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[17]">EINT4_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[24]">EINT9_5_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[3d]">EMMC_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[11]">FMC_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from apm32e10x_it.o(i.HardFault_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[2d]">I2C1_ER_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[2c]">I2C1_EV_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[2f]">I2C2_ER_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[2e]">I2C2_EV_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from apm32e10x_it.o(i.MemManage_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from apm32e10x_it.o(i.NMI_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[e]">PVD_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from apm32e10x_it.o(i.PendSV_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[12]">RCM_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[36]">RTCAlarm_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[10]">RTC_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[3e]">SDIO_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[30]">SPI1_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[31]">SPI2_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[40]">SPI3_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from apm32e10x_it.o(i.SVC_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from apm32e10x_it.o(i.SysTick_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[4d]">SystemInit</a> from system_apm32e10x.o(i.SystemInit) referenced from startup_apm32e10x_hd.o(.text)
 <LI><a href="#[f]">TAMPER_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[25]">TMR1_BRK_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[28]">TMR1_CC_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[27]">TMR1_TRG_COM_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[26]">TMR1_UP_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[29]">TMR2_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[2a]">TMR3_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[2b]">TMR4_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[3f]">TMR5_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[43]">TMR6_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[44]">TMR7_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[38]">TMR8_BRK_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[3b]">TMR8_CC_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[3a]">TMR8_TRG_COM_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[39]">TMR8_UP_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[41]">UART4_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[42]">UART5_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[32]">USART1_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[33]">USART2_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[34]">USART3_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[20]">USBD1_HP_CAN1_TX_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[21]">USBD1_LP_CAN1_RX0_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[49]">USBD2_HP_CAN2_TX_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[4a]">USBD2_LP_CAN2_RX0_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[37]">USBDWakeUp_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from apm32e10x_it.o(i.UsageFault_Handler) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[d]">WWDT_IRQHandler</a> from startup_apm32e10x_hd.o(.text) referenced from startup_apm32e10x_hd.o(RESET)
 <LI><a href="#[4f]">__main</a> from __main.o(!!!main) referenced from startup_apm32e10x_hd.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4f]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[50]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[52]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[7d]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[7e]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[53]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[7f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[57]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[80]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[81]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[82]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[83]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[84]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[85]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[86]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[87]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[88]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[89]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[90]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[91]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[92]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[93]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[94]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[5c]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[95]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[96]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[97]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[98]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[99]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[9a]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[9b]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[51]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[9c]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[54]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[56]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[9d]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[58]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; flash_ee_init &rArr; flash_ee_valid_transfer &rArr; flash_ee_copy_to_new_page &rArr; flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[9e]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[61]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[5b]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[9f]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[5d]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>EINT15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EINT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EINT9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>EMMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RCM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TMR1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TMR1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TMR1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TMR1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TMR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TMR4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TMR5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TMR6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TMR7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TMR8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TMR8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TMR8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TMR8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USBD1_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USBD1_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>USBD2_HP_CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>USBD2_LP_CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>USBDWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32e10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_apm32e10x_hd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a0]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[5a]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[a3]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a4]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[a5]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>APM_MINI_LEDInit</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, board.o(i.APM_MINI_LEDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = APM_MINI_LEDInit &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB2PeriphClock
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>APM_MINI_LEDOff</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, board.o(i.APM_MINI_LEDOff))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>APM_MINI_LEDOn</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, board.o(i.APM_MINI_LEDOn))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apm32e10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32e10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>FMC_ErasePage</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, apm32e10x_fmc.o(i.FMC_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FMC_ErasePage &rArr; FMC_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_page_erase
</UL>

<P><STRONG><a name="[74]"></a>FMC_Lock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apm32e10x_fmc.o(i.FMC_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_data_write
</UL>

<P><STRONG><a name="[67]"></a>FMC_ProgramHalfWord</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, apm32e10x_fmc.o(i.FMC_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FMC_ProgramHalfWord &rArr; FMC_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_WaitForLastOperation
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_write_no_check
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_format
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_erase_transfer
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_copy_to_new_page
</UL>

<P><STRONG><a name="[69]"></a>FMC_ReadStatus</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, apm32e10x_fmc.o(i.FMC_ReadStatus))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_WaitForLastOperation
</UL>

<P><STRONG><a name="[72]"></a>FMC_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32e10x_fmc.o(i.FMC_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_data_write
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>FMC_WaitForLastOperation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, apm32e10x_fmc.o(i.FMC_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FMC_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramHalfWord
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ErasePage
</UL>

<P><STRONG><a name="[64]"></a>GPIO_Config</STRONG> (Thumb, 154 bytes, Stack size 20 bytes, apm32e10x_gpio.o(i.GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_MINI_LEDInit
</UL>

<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apm32e10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apm32e10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32e10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32e10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>RCM_EnableAPB2PeriphClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32e10x_rcm.o(i.RCM_EnableAPB2PeriphClock))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_MINI_LEDInit
</UL>

<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32e10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32e10x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>SystemInit</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, system_apm32e10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemInit &rArr; SystemClockConfig &rArr; SystemClock72M
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(.text)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apm32e10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32e10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>buffer_compare</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, main.o(i.buffer_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = buffer_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>flash_ee_copy_to_new_page</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, eeprom.o(i.flash_ee_copy_to_new_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = flash_ee_copy_to_new_page &rArr; flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramHalfWord
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_write_no_check
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_valid_page_get
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_page_erase
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_data_read
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_valid_transfer
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_full_check
</UL>

<P><STRONG><a name="[6e]"></a>flash_ee_data_read</STRONG> (Thumb, 98 bytes, Stack size 28 bytes, eeprom.o(i.flash_ee_data_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = flash_ee_data_read
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_valid_page_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_copy_to_new_page
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>flash_ee_data_write</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, eeprom.o(i.flash_ee_data_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = flash_ee_data_write &rArr; flash_ee_full_check &rArr; flash_ee_copy_to_new_page &rArr; flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Lock
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_write_no_check
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_full_check
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>flash_ee_erase_transfer</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, eeprom.o(i.flash_ee_erase_transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = flash_ee_erase_transfer &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
</UL>

<P><STRONG><a name="[76]"></a>flash_ee_format</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, eeprom.o(i.flash_ee_format))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = flash_ee_format &rArr; flash_ee_page_erase &rArr; FMC_ErasePage &rArr; FMC_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramHalfWord
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_page_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
</UL>

<P><STRONG><a name="[78]"></a>flash_ee_format_check</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, eeprom.o(i.flash_ee_format_check))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
</UL>

<P><STRONG><a name="[73]"></a>flash_ee_full_check</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, eeprom.o(i.flash_ee_full_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = flash_ee_full_check &rArr; flash_ee_copy_to_new_page &rArr; flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_valid_page_get
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_copy_to_new_page
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_data_write
</UL>

<P><STRONG><a name="[77]"></a>flash_ee_init</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, eeprom.o(i.flash_ee_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = flash_ee_init &rArr; flash_ee_valid_transfer &rArr; flash_ee_copy_to_new_page &rArr; flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Lock
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_valid_transfer
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_page_erase
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_full_check
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_format_check
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_format
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_erase_transfer
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>flash_ee_page_erase</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, eeprom.o(i.flash_ee_page_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = flash_ee_page_erase &rArr; FMC_ErasePage &rArr; FMC_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_valid_transfer
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_format
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_copy_to_new_page
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
</UL>

<P><STRONG><a name="[6d]"></a>flash_ee_valid_page_get</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, eeprom.o(i.flash_ee_valid_page_get))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_write_no_check
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_full_check
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_copy_to_new_page
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_data_read
</UL>

<P><STRONG><a name="[79]"></a>flash_ee_valid_transfer</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, eeprom.o(i.flash_ee_valid_transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = flash_ee_valid_transfer &rArr; flash_ee_copy_to_new_page &rArr; flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_page_erase
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_copy_to_new_page
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
</UL>

<P><STRONG><a name="[6f]"></a>flash_ee_write_no_check</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, eeprom.o(i.flash_ee_write_no_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramHalfWord
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_valid_page_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_copy_to_new_page
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_data_write
</UL>

<P><STRONG><a name="[59]"></a>main</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = main &rArr; flash_ee_init &rArr; flash_ee_valid_transfer &rArr; flash_ee_copy_to_new_page &rArr; flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_data_write
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_data_read
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Unlock
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_MINI_LEDOn
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_MINI_LEDOff
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_MINI_LEDInit
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffer_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[6b]"></a>SystemClock72M</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, system_apm32e10x.o(i.SystemClock72M))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemClock72M
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockConfig
</UL>

<P><STRONG><a name="[6a]"></a>SystemClockConfig</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_apm32e10x.o(i.SystemClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemClockConfig &rArr; SystemClock72M
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock72M
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[68]"></a>__set_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apm32e10x_fmc.o(i.__set_PRIMASK))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramHalfWord
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
